var search_data = {"index":{"searchIndex":["advtype","advtypescontroller","advtypeshelper","applicationcontroller","applicationhelper","applicationmailer","article","articlescontroller","articleshelper","basetype","basetypescontroller","basetypeshelper","campaign","campaignscontroller","campaignshelper","cheater","comment","commentscontroller","commentshelper","feat","featattr","featreq","featscontroller","featshelper","modattr","personalitiescontroller","personalitieshelper","personality","physattr","physattrscontroller","physattrshelper","player","playerscontroller","playershelper","plyrattr","plyrskill","race","raceattr","racescontroller","raceshelper","req","skill","skillscontroller","skillshelper","typeattr","typereq","user","welcomecontroller","welcomehelper","add_level()","attrbuff()","attrbuff()","attrbuff()","attrbuff()","base_value()","belongs_to_player()","belongs_to_player()","belongs_to_player()","campaign()","can_activate?()","clone()","clone()","collection_meets?()","compare()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit_collection()","edit_name()","edit_perk()","edit_physattrs()","edit_string()","edit_string_list()","edit_summary()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index_table()","index_title()","is_alive?()","is_hidden?()","is_hidden?()","level()","long_name()","lookup()","max_hp()","max_sp()","meets_reqs?()","method_value_meets?()","model_meets?()","modifiers()","name_exists?()","name_exists?()","navbar_dropdown()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new_list()","new_list()","new_player()","nick_exists?()","percent_hp()","percent_sp()","physattr()","physattr()","physattr()","physattr()","physattr_exists?()","physattr_exists?()","physattr_exists?()","player_meets?()","players()","plyrattr()","plyrattr_exists?()","raceattr_exists?()","roll()","selection_meets?()","setbase()","setrace()","short()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show_collection_list()","show_collection_table()","show_edit_errors()","show_perk()","show_physattr_list()","show_strong()","show_strong_list()","show_summary()","show_title()","skill_exists?()","skill_mod()","skillup()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","total()","total()","typeattr_exists?()","up()","up()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","valid_activations()","readme"],"longSearchIndex":["advtype","advtypescontroller","advtypeshelper","applicationcontroller","applicationhelper","applicationmailer","article","articlescontroller","articleshelper","basetype","basetypescontroller","basetypeshelper","campaign","campaignscontroller","campaignshelper","cheater","comment","commentscontroller","commentshelper","feat","featattr","featreq","featscontroller","featshelper","modattr","personalitiescontroller","personalitieshelper","personality","physattr","physattrscontroller","physattrshelper","player","playerscontroller","playershelper","plyrattr","plyrskill","race","raceattr","racescontroller","raceshelper","req","skill","skillscontroller","skillshelper","typeattr","typereq","user","welcomecontroller","welcomehelper","playerscontroller#add_level()","basetype#attrbuff()","basetype::attrbuff()","race#attrbuff()","race::attrbuff()","player#base_value()","feat#belongs_to_player()","plyrattr#belongs_to_player()","plyrskill#belongs_to_player()","feat#campaign()","feat#can_activate?()","plyrattr::clone()","plyrskill::clone()","req#collection_meets?()","req#compare()","advtypescontroller#create()","articlescontroller#create()","basetypescontroller#create()","campaignscontroller#create()","commentscontroller#create()","featscontroller#create()","personalitiescontroller#create()","physattrscontroller#create()","playerscontroller#create()","racescontroller#create()","skillscontroller#create()","advtypescontroller#destroy()","articlescontroller#destroy()","basetypescontroller#destroy()","campaignscontroller#destroy()","featscontroller#destroy()","personalitiescontroller#destroy()","physattrscontroller#destroy()","playerscontroller#destroy()","racescontroller#destroy()","skillscontroller#destroy()","advtypescontroller#edit()","articlescontroller#edit()","basetypescontroller#edit()","campaignscontroller#edit()","featscontroller#edit()","personalitiescontroller#edit()","physattrscontroller#edit()","playerscontroller#edit()","racescontroller#edit()","skillscontroller#edit()","applicationhelper#edit_collection()","applicationhelper#edit_name()","applicationhelper#edit_perk()","applicationhelper#edit_physattrs()","applicationhelper#edit_string()","applicationhelper#edit_string_list()","applicationhelper#edit_summary()","advtypescontroller#index()","articlescontroller#index()","basetypescontroller#index()","campaignscontroller#index()","featscontroller#index()","personalitiescontroller#index()","physattrscontroller#index()","playerscontroller#index()","racescontroller#index()","skillscontroller#index()","welcomecontroller#index()","applicationhelper#index_table()","applicationhelper#index_title()","player#is_alive?()","physattr#is_hidden?()","skill#is_hidden?()","player#level()","physattr::long_name()","plyrskill#lookup()","player#max_hp()","player#max_sp()","advtype#meets_reqs?()","req#method_value_meets?()","req#model_meets?()","plyrattr#modifiers()","physattr::name_exists?()","skill::name_exists?()","applicationhelper#navbar_dropdown()","advtypescontroller#new()","articlescontroller#new()","basetypescontroller#new()","campaignscontroller#new()","featscontroller#new()","personalitiescontroller#new()","physattrscontroller#new()","playerscontroller#new()","racescontroller#new()","skillscontroller#new()","plyrattr::new_list()","plyrskill::new_list()","player::new_player()","player::nick_exists?()","player#percent_hp()","player#percent_sp()","basetype#physattr()","player#physattr()","race#physattr()","skill#physattr()","basetype#physattr_exists?()","player#physattr_exists?()","race#physattr_exists?()","req#player_meets?()","campaign#players()","plyrskill#plyrattr()","player#plyrattr_exists?()","race#raceattr_exists?()","plyrskill#roll()","req#selection_meets?()","player#setbase()","player#setrace()","physattr#short()","advtypescontroller#show()","articlescontroller#show()","basetypescontroller#show()","campaignscontroller#show()","featscontroller#show()","personalitiescontroller#show()","physattrscontroller#show()","playerscontroller#show()","racescontroller#show()","skillscontroller#show()","applicationhelper#show_collection_list()","applicationhelper#show_collection_table()","applicationhelper#show_edit_errors()","applicationhelper#show_perk()","applicationhelper#show_physattr_list()","applicationhelper#show_strong()","applicationhelper#show_strong_list()","applicationhelper#show_summary()","applicationhelper#show_title()","player#skill_exists?()","plyrattr#skill_mod()","player#skillup()","advtype#to_s()","basetype#to_s()","personality#to_s()","physattr#to_s()","plyrattr#to_s()","plyrskill#to_s()","race#to_s()","req#to_s()","skill#to_s()","plyrattr#total()","plyrskill#total()","basetype#typeattr_exists?()","plyrattr#up()","plyrskill#up()","advtypescontroller#update()","articlescontroller#update()","basetypescontroller#update()","campaignscontroller#update()","featscontroller#update()","personalitiescontroller#update()","physattrscontroller#update()","playerscontroller#update()","racescontroller#update()","skillscontroller#update()","feat::valid_activations()",""],"info":[["Advtype","","Advtype.html","",""],["AdvtypesController","","AdvtypesController.html","",""],["AdvtypesHelper","","AdvtypesHelper.html","",""],["ApplicationController","","ApplicationController.html","",""],["ApplicationHelper","","ApplicationHelper.html","",""],["ApplicationMailer","","ApplicationMailer.html","",""],["Article","","Article.html","",""],["ArticlesController","","ArticlesController.html","",""],["ArticlesHelper","","ArticlesHelper.html","",""],["Basetype","","Basetype.html","",""],["BasetypesController","","BasetypesController.html","",""],["BasetypesHelper","","BasetypesHelper.html","",""],["Campaign","","Campaign.html","",""],["CampaignsController","","CampaignsController.html","",""],["CampaignsHelper","","CampaignsHelper.html","",""],["Cheater","","Cheater.html","",""],["Comment","","Comment.html","",""],["CommentsController","","CommentsController.html","",""],["CommentsHelper","","CommentsHelper.html","",""],["Feat","","Feat.html","",""],["Featattr","","Featattr.html","",""],["Featreq","","Featreq.html","",""],["FeatsController","","FeatsController.html","",""],["FeatsHelper","","FeatsHelper.html","",""],["Modattr","","Modattr.html","",""],["PersonalitiesController","","PersonalitiesController.html","",""],["PersonalitiesHelper","","PersonalitiesHelper.html","",""],["Personality","","Personality.html","",""],["Physattr","","Physattr.html","",""],["PhysattrsController","","PhysattrsController.html","",""],["PhysattrsHelper","","PhysattrsHelper.html","",""],["Player","","Player.html","",""],["PlayersController","","PlayersController.html","",""],["PlayersHelper","","PlayersHelper.html","",""],["Plyrattr","","Plyrattr.html","",""],["Plyrskill","","Plyrskill.html","",""],["Race","","Race.html","",""],["Raceattr","","Raceattr.html","",""],["RacesController","","RacesController.html","",""],["RacesHelper","","RacesHelper.html","",""],["Req","","Req.html","","<p>Tests to determine if a player can add the advanced personality type. You\nhave to set a single method â€¦\n"],["Skill","","Skill.html","",""],["SkillsController","","SkillsController.html","",""],["SkillsHelper","","SkillsHelper.html","",""],["Typeattr","","Typeattr.html","",""],["Typereq","","Typereq.html","",""],["User","","User.html","",""],["WelcomeController","","WelcomeController.html","",""],["WelcomeHelper","","WelcomeHelper.html","",""],["add_level","PlayersController","PlayersController.html#method-i-add_level","()",""],["attrBuff","Basetype","Basetype.html#method-i-attrBuff","(attrname)",""],["attrBuff","Basetype","Basetype.html#method-c-attrBuff","(typename, attrname)",""],["attrBuff","Race","Race.html#method-i-attrBuff","(attrname)","<p>Return the modifier for a particular attr\n"],["attrBuff","Race","Race.html#method-c-attrBuff","(typename, attrname)",""],["base_value","Player","Player.html#method-i-base_value","(name, collection)","<p>Guesses what the name belongs to, and tries to get the base value\n"],["belongs_to_player","Feat","Feat.html#method-i-belongs_to_player","()","<p>Return who we belong to\n"],["belongs_to_player","Plyrattr","Plyrattr.html#method-i-belongs_to_player","()","<p>Find out who we belong to\n"],["belongs_to_player","Plyrskill","Plyrskill.html#method-i-belongs_to_player","()",""],["campaign","Feat","Feat.html#method-i-campaign","()",""],["can_activate?","Feat","Feat.html#method-i-can_activate-3F","(activation)","<p>Checks if the feat can be activated\n"],["clone","Plyrattr","Plyrattr.html#method-c-clone","(a)","<p>Clone from a physattr\n"],["clone","Plyrskill","Plyrskill.html#method-c-clone","(skill)",""],["collection_meets?","Req","Req.html#method-i-collection_meets-3F","(col)","<p>Returns true if any models in the collection pass. Else, returns false\n"],["compare","Req","Req.html#method-i-compare","(value, test)",""],["create","AdvtypesController","AdvtypesController.html#method-i-create","()",""],["create","ArticlesController","ArticlesController.html#method-i-create","()",""],["create","BasetypesController","BasetypesController.html#method-i-create","()",""],["create","CampaignsController","CampaignsController.html#method-i-create","()","<p>POST /campaigns POST /campaigns.json\n"],["create","CommentsController","CommentsController.html#method-i-create","()",""],["create","FeatsController","FeatsController.html#method-i-create","()",""],["create","PersonalitiesController","PersonalitiesController.html#method-i-create","()",""],["create","PhysattrsController","PhysattrsController.html#method-i-create","()",""],["create","PlayersController","PlayersController.html#method-i-create","()",""],["create","RacesController","RacesController.html#method-i-create","()",""],["create","SkillsController","SkillsController.html#method-i-create","()",""],["destroy","AdvtypesController","AdvtypesController.html#method-i-destroy","()",""],["destroy","ArticlesController","ArticlesController.html#method-i-destroy","()",""],["destroy","BasetypesController","BasetypesController.html#method-i-destroy","()",""],["destroy","CampaignsController","CampaignsController.html#method-i-destroy","()","<p>DELETE /campaigns/1 DELETE /campaigns/1.json\n"],["destroy","FeatsController","FeatsController.html#method-i-destroy","()",""],["destroy","PersonalitiesController","PersonalitiesController.html#method-i-destroy","()",""],["destroy","PhysattrsController","PhysattrsController.html#method-i-destroy","()",""],["destroy","PlayersController","PlayersController.html#method-i-destroy","()",""],["destroy","RacesController","RacesController.html#method-i-destroy","()",""],["destroy","SkillsController","SkillsController.html#method-i-destroy","()",""],["edit","AdvtypesController","AdvtypesController.html#method-i-edit","()",""],["edit","ArticlesController","ArticlesController.html#method-i-edit","()",""],["edit","BasetypesController","BasetypesController.html#method-i-edit","()",""],["edit","CampaignsController","CampaignsController.html#method-i-edit","()","<p>GET /campaigns/1/edit\n"],["edit","FeatsController","FeatsController.html#method-i-edit","()",""],["edit","PersonalitiesController","PersonalitiesController.html#method-i-edit","()",""],["edit","PhysattrsController","PhysattrsController.html#method-i-edit","()",""],["edit","PlayersController","PlayersController.html#method-i-edit","()",""],["edit","RacesController","RacesController.html#method-i-edit","()",""],["edit","SkillsController","SkillsController.html#method-i-edit","()",""],["edit_collection","ApplicationHelper","ApplicationHelper.html#method-i-edit_collection","(f, model, method, collection, get_instance, opts={})",""],["edit_name","ApplicationHelper","ApplicationHelper.html#method-i-edit_name","(f)",""],["edit_perk","ApplicationHelper","ApplicationHelper.html#method-i-edit_perk","(f)",""],["edit_physattrs","ApplicationHelper","ApplicationHelper.html#method-i-edit_physattrs","(f, model, physattr_method, opts={})",""],["edit_string","ApplicationHelper","ApplicationHelper.html#method-i-edit_string","(f, method, name=nil)",""],["edit_string_list","ApplicationHelper","ApplicationHelper.html#method-i-edit_string_list","(f, methods=[])",""],["edit_summary","ApplicationHelper","ApplicationHelper.html#method-i-edit_summary","(f, summary = :summary)",""],["index","AdvtypesController","AdvtypesController.html#method-i-index","()",""],["index","ArticlesController","ArticlesController.html#method-i-index","()",""],["index","BasetypesController","BasetypesController.html#method-i-index","()",""],["index","CampaignsController","CampaignsController.html#method-i-index","()","<p>GET /campaigns GET /campaigns.json\n"],["index","FeatsController","FeatsController.html#method-i-index","()",""],["index","PersonalitiesController","PersonalitiesController.html#method-i-index","()",""],["index","PhysattrsController","PhysattrsController.html#method-i-index","()",""],["index","PlayersController","PlayersController.html#method-i-index","()",""],["index","RacesController","RacesController.html#method-i-index","()",""],["index","SkillsController","SkillsController.html#method-i-index","()",""],["index","WelcomeController","WelcomeController.html#method-i-index","()",""],["index_table","ApplicationHelper","ApplicationHelper.html#method-i-index_table","(items)",""],["index_title","ApplicationHelper","ApplicationHelper.html#method-i-index_title","(title)",""],["is_alive?","Player","Player.html#method-i-is_alive-3F","()","<p>Returns true if the player has any hp\n"],["is_hidden?","Physattr","Physattr.html#method-i-is_hidden-3F","()","<p>Checks if the physattr is hidden\n"],["is_hidden?","Skill","Skill.html#method-i-is_hidden-3F","()","<p>Checks if the physattr is hidden\n"],["level","Player","Player.html#method-i-level","()","<p>Returns the player&#39;s level\n"],["long_name","Physattr","Physattr.html#method-c-long_name","(x)","<p>Match the full name if given an abbreviation\n"],["lookup","Plyrskill","Plyrskill.html#method-i-lookup","()",""],["max_hp","Player","Player.html#method-i-max_hp","()","<p>Returns the players max hp\n"],["max_sp","Player","Player.html#method-i-max_sp","()","<p>Returns the players max sp\n"],["meets_reqs?","Advtype","Advtype.html#method-i-meets_reqs-3F","(player)","<p>Checks if the player meets the requirements to add this adv type\n"],["method_value_meets?","Req","Req.html#method-i-method_value_meets-3F","(value)",""],["model_meets?","Req","Req.html#method-i-model_meets-3F","(model)","<p>Test if a model meets the reqs\n"],["modifiers","Plyrattr","Plyrattr.html#method-i-modifiers","(player=nil)","<p>Takes a player and calculates the total buff for an attribute\n"],["name_exists?","Physattr","Physattr.html#method-c-name_exists-3F","(name)",""],["name_exists?","Skill","Skill.html#method-c-name_exists-3F","(name)",""],["navbar_dropdown","ApplicationHelper","ApplicationHelper.html#method-i-navbar_dropdown","(model, title=nil)",""],["new","AdvtypesController","AdvtypesController.html#method-i-new","()",""],["new","ArticlesController","ArticlesController.html#method-i-new","()",""],["new","BasetypesController","BasetypesController.html#method-i-new","()",""],["new","CampaignsController","CampaignsController.html#method-i-new","()","<p>GET /campaigns/new\n"],["new","FeatsController","FeatsController.html#method-i-new","()",""],["new","PersonalitiesController","PersonalitiesController.html#method-i-new","()",""],["new","PhysattrsController","PhysattrsController.html#method-i-new","()",""],["new","PlayersController","PlayersController.html#method-i-new","()",""],["new","RacesController","RacesController.html#method-i-new","()",""],["new","SkillsController","SkillsController.html#method-i-new","()",""],["new_list","Plyrattr","Plyrattr.html#method-c-new_list","()","<p>Create a new list of all physattrs\n"],["new_list","Plyrskill","Plyrskill.html#method-c-new_list","()","<p>Create a new list of all plyrskills\n"],["new_player","Player","Player.html#method-c-new_player","(nick)",""],["nick_exists?","Player","Player.html#method-c-nick_exists-3F","(nick)","<p>If a player has that nick, return that player, else return nil.\n"],["percent_hp","Player","Player.html#method-i-percent_hp","()",""],["percent_sp","Player","Player.html#method-i-percent_sp","()",""],["physattr","Basetype","Basetype.html#method-i-physattr","()",""],["physattr","Player","Player.html#method-i-physattr","()",""],["physattr","Race","Race.html#method-i-physattr","()",""],["physattr","Skill","Skill.html#method-i-physattr","()",""],["physattr_exists?","Basetype","Basetype.html#method-i-physattr_exists-3F","(rattr_name)","<p>In order to make things a little more general, we can refer to the raceattr\nas physattr\n"],["physattr_exists?","Player","Player.html#method-i-physattr_exists-3F","(rattr_name)","<p>In order to make things a little more general, we can refer to the plyrattr\nas physattr\n"],["physattr_exists?","Race","Race.html#method-i-physattr_exists-3F","(rattr_name)","<p>In order to make things a little more general, we can refer to the raceattr\nas physattr\n"],["player_meets?","Req","Req.html#method-i-player_meets-3F","(player)","<p>Test if a player has the requirements\n"],["players","Campaign","Campaign.html#method-i-players","()",""],["plyrattr","Plyrskill","Plyrskill.html#method-i-plyrattr","(player=nil)",""],["plyrattr_exists?","Player","Player.html#method-i-plyrattr_exists-3F","(rattr_name)","<p>Check for a valid physattr name Automatically add the plyrattr if it does\nnot exists Returns the plyrattr â€¦\n"],["raceattr_exists?","Race","Race.html#method-i-raceattr_exists-3F","(rattr_name)","<p>Check for a valid physattr name Automatically add the raceattr if it does\nnot exists Returns the raceattr â€¦\n"],["roll","Plyrskill","Plyrskill.html#method-i-roll","(n=20)","<p>Roll 20 for this skill\n"],["selection_meets?","Req","Req.html#method-i-selection_meets-3F","(sel)",""],["setBase","Player","Player.html#method-i-setBase","(base_name)","\n<pre>Set player base class</pre>\n<p>Returns nil if the class does not exist Returns true if successful\n"],["setRace","Player","Player.html#method-i-setRace","(race_name)","<p>Set player race Returns nil if the race does not exist Returns true if\nsuccessful\n"],["short","Physattr","Physattr.html#method-i-short","()",""],["show","AdvtypesController","AdvtypesController.html#method-i-show","()",""],["show","ArticlesController","ArticlesController.html#method-i-show","()",""],["show","BasetypesController","BasetypesController.html#method-i-show","()",""],["show","CampaignsController","CampaignsController.html#method-i-show","()","<p>GET /campaigns/1 GET /campaigns/1.json\n"],["show","FeatsController","FeatsController.html#method-i-show","()",""],["show","PersonalitiesController","PersonalitiesController.html#method-i-show","()",""],["show","PhysattrsController","PhysattrsController.html#method-i-show","()",""],["show","PlayersController","PlayersController.html#method-i-show","()",""],["show","RacesController","RacesController.html#method-i-show","()",""],["show","SkillsController","SkillsController.html#method-i-show","()",""],["show_collection_list","ApplicationHelper","ApplicationHelper.html#method-i-show_collection_list","(model, collection, opts={})",""],["show_collection_table","ApplicationHelper","ApplicationHelper.html#method-i-show_collection_table","(model, collection, data, opts={})",""],["show_edit_errors","ApplicationHelper","ApplicationHelper.html#method-i-show_edit_errors","(model)",""],["show_perk","ApplicationHelper","ApplicationHelper.html#method-i-show_perk","(model)",""],["show_physattr_list","ApplicationHelper","ApplicationHelper.html#method-i-show_physattr_list","(model, physattrs_method, opts={})",""],["show_strong","ApplicationHelper","ApplicationHelper.html#method-i-show_strong","(model, method, name=nil)",""],["show_strong_list","ApplicationHelper","ApplicationHelper.html#method-i-show_strong_list","(model, methods=[])",""],["show_summary","ApplicationHelper","ApplicationHelper.html#method-i-show_summary","(model, summary = :summary)",""],["show_title","ApplicationHelper","ApplicationHelper.html#method-i-show_title","(model, opts={})",""],["skill_exists?","Player","Player.html#method-i-skill_exists-3F","(skill_name)","<p>Check for a valid skill name This will also automatically add the skill to\nthe player if the skill exists, â€¦\n"],["skill_mod","Plyrattr","Plyrattr.html#method-i-skill_mod","(player=nil)","<p>Calculate the skill buff for the attr\n"],["skillup","Player","Player.html#method-i-skillup","(skill_name, x=1)","<p>Increment a player skill Returns nil if the skill does not exist Returns\nthe current value of the skill â€¦\n"],["to_s","Advtype","Advtype.html#method-i-to_s","()",""],["to_s","Basetype","Basetype.html#method-i-to_s","()","<p>Return a string form of the race\n"],["to_s","Personality","Personality.html#method-i-to_s","()",""],["to_s","Physattr","Physattr.html#method-i-to_s","()",""],["to_s","Plyrattr","Plyrattr.html#method-i-to_s","()",""],["to_s","Plyrskill","Plyrskill.html#method-i-to_s","()",""],["to_s","Race","Race.html#method-i-to_s","()","<p>Return a string form of the race\n"],["to_s","Req","Req.html#method-i-to_s","()",""],["to_s","Skill","Skill.html#method-i-to_s","()",""],["total","Plyrattr","Plyrattr.html#method-i-total","(player=nil, mods=nil)","<p>Total value of the attr\n"],["total","Plyrskill","Plyrskill.html#method-i-total","()","<p>Get the total value of the skill Sum of the base value and the modifier\nfrom the skills related physattr â€¦\n"],["typeattr_exists?","Basetype","Basetype.html#method-i-typeattr_exists-3F","(tattr_name)","<p>Check for a valid physattr name Automatically add the attr if it does not\nexists Returns the raceattr â€¦\n"],["up","Plyrattr","Plyrattr.html#method-i-up","(x=1)","<p>Increment the base value\n"],["up","Plyrskill","Plyrskill.html#method-i-up","(x=1)","<p>Increment the skill value\n"],["update","AdvtypesController","AdvtypesController.html#method-i-update","()",""],["update","ArticlesController","ArticlesController.html#method-i-update","()",""],["update","BasetypesController","BasetypesController.html#method-i-update","()",""],["update","CampaignsController","CampaignsController.html#method-i-update","()","<p>PATCH/PUT /campaigns/1 PATCH/PUT /campaigns/1.json\n"],["update","FeatsController","FeatsController.html#method-i-update","()",""],["update","PersonalitiesController","PersonalitiesController.html#method-i-update","()",""],["update","PhysattrsController","PhysattrsController.html#method-i-update","()",""],["update","PlayersController","PlayersController.html#method-i-update","()",""],["update","RacesController","RacesController.html#method-i-update","()",""],["update","SkillsController","SkillsController.html#method-i-update","()",""],["valid_activations","Feat","Feat.html#method-c-valid_activations","()",""],["README","","README_rdoc.html","","<p>README\n<p>This README would normally document whatever steps are necessary to get the\napplication up and â€¦\n"]]}}